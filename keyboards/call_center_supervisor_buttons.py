from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder

def get_call_center_supervisor_main_menu(lang: str = 'uz') -> ReplyKeyboardMarkup:
    if lang == 'ru':
        keyboard = [
            [KeyboardButton(text="üì• –í—Ö–æ–¥—è—â–∏–µ"),KeyboardButton(text="üë• –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤")],
            [KeyboardButton(text="üîå –°–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ"), KeyboardButton(text="üîß –°–æ–∑–¥–∞—Ç—å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫—É—é –∑–∞—è–≤–∫—É")],
            [KeyboardButton(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"), KeyboardButton(text="üì§ –≠–∫—Å–ø–æ—Ä—Ç")],
            [KeyboardButton(text="üåê –ò–∑–º–µ–Ω–∏—Ç—å —è–∑—ã–∫")],
        ]
    else:
        keyboard = [
            [KeyboardButton(text="üì• Inbox"),KeyboardButton(text="üë• Xodimlar faoliyati")],
            [KeyboardButton(text="üîå Ulanish arizasi yaratish"), KeyboardButton(text="üîß Texnik xizmat yaratish")],
            [KeyboardButton(text="üìä Statistikalar"), KeyboardButton(text="üì§ Export")],
            [KeyboardButton(text="üåê Tilni o'zgartirish")],
        ]
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)



def zayavka_type_keyboard(lang="uz"):
    """Zayavka turini tanlash klaviaturasi - 2 tilda"""
    person_physical_text = "üë§ Jismoniy shaxs" if lang == "uz" else "üë§ –§–∏–∑–∏—á–µ—Å–∫–æ–µ –ª–∏—Ü–æ"
    person_legal_text = "üè¢ Yuridik shaxs" if lang == "uz" else "üè¢ –Æ—Ä–∏–¥–∏—á–µ—Å–∫–æ–µ –ª–∏—Ü–æ"
    
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text=person_physical_text, callback_data="zayavka_type_b2c")],
            [InlineKeyboardButton(text=person_legal_text, callback_data="zayavka_type_b2b")]
        ]
    )
    return keyboard

def get_operator_tariff_selection_keyboard() -> InlineKeyboardMarkup:
    """Tariff selection keyboard for CALL-CENTER OPERATOR (UZ only)."""
    keyboard = [
        [
            InlineKeyboardButton(text="Oddiy-20", callback_data="op_tariff_b2c_plan_0"),
            InlineKeyboardButton(text="Oddiy-50", callback_data="op_tariff_b2c_plan_1"),
        ],
        [
            InlineKeyboardButton(text="Oddiy-100", callback_data="op_tariff_b2c_plan_2"),
            InlineKeyboardButton(text="XIT-200", callback_data="op_tariff_b2c_plan_3"),
        ],
        [
            InlineKeyboardButton(text="VIP-500", callback_data="op_tariff_b2c_plan_4"),
            InlineKeyboardButton(text="PREMIUM", callback_data="op_tariff_b2c_plan_5"),
        ],
        [
            InlineKeyboardButton(text="BizNET-Pro-1", callback_data="op_tariff_biznet_plan_0"),
            InlineKeyboardButton(text="BizNET-Pro-2", callback_data="op_tariff_biznet_plan_1"),
        ],
        [
            InlineKeyboardButton(text="BizNET-Pro-3", callback_data="op_tariff_biznet_plan_2"),
            InlineKeyboardButton(text="BizNET-Pro-4", callback_data="op_tariff_biznet_plan_3"),
        ],
        [
            InlineKeyboardButton(text="BizNET-Pro-5", callback_data="op_tariff_biznet_plan_4"),
            InlineKeyboardButton(text="BizNET-Pro-6", callback_data="op_tariff_biznet_plan_5"),
        ],
        [
            InlineKeyboardButton(text="BizNET-Pro-7+", callback_data="op_tariff_biznet_plan_6"),
            InlineKeyboardButton(text="Tijorat-1", callback_data="op_tariff_tijorat_plan_0"),
        ],
        [
            InlineKeyboardButton(text="Tijorat-2", callback_data="op_tariff_tijorat_plan_1"),
            InlineKeyboardButton(text="Tijorat-3", callback_data="op_tariff_tijorat_plan_2"),
        ],
        [
            InlineKeyboardButton(text="Tijorat-4", callback_data="op_tariff_tijorat_plan_3"),
            InlineKeyboardButton(text="Tijorat-5", callback_data="op_tariff_tijorat_plan_4"),
        ],
        [
            InlineKeyboardButton(text="Tijorat-100", callback_data="op_tariff_tijorat_plan_5"),
            InlineKeyboardButton(text="Tijorat-300", callback_data="op_tariff_tijorat_plan_6"),
        ],
        [
            InlineKeyboardButton(text="Tijorat-500", callback_data="op_tariff_tijorat_plan_7"),
            InlineKeyboardButton(text="Tijorat-1000", callback_data="op_tariff_tijorat_plan_8"),
        ],
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def confirmation_keyboard(lang="uz"):
    """Tasdiqlash klaviaturasi - 2 tilda"""
    confirm_text = "‚úÖ Tasdiqlash" if lang == "uz" else "‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å"
    resend_text = "üîÑ Qayta yuborish" if lang == "uz" else "üîÑ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–Ω–æ–≤–æ"
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text=confirm_text, callback_data="confirm_zayavka_call_center"),
            InlineKeyboardButton(text=resend_text, callback_data="resend_zayavka_call_center")
        ]
    ])
    return keyboard

def confirmation_keyboard_tech_service(lang="uz"):
    """Tasdiqlash klaviaturasi - 2 tilda"""
    confirm_text = "‚úÖ Tasdiqlash" if lang == "uz" else "‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å"
    resend_text = "üîÑ Qayta yuborish" if lang == "uz" else "üîÑ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–Ω–æ–≤–æ"
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text=confirm_text, callback_data="confirm_zayavka_call_center_tech_service"),
            InlineKeyboardButton(text=resend_text, callback_data="resend_zayavka_call_center_tech_service")
        ]
    ])
    return keyboard

def get_client_regions_keyboard(lang: str = 'uz') -> InlineKeyboardMarkup:
    """Regions selection keyboard for client"""
    keyboard = [
        [
            InlineKeyboardButton(text="Toshkent shahri", callback_data="region_toshkent_city"),
            InlineKeyboardButton(text="Toshkent viloyati", callback_data="region_toshkent_region")
        ],
        [
            InlineKeyboardButton(text="Andijon", callback_data="region_andijon"),
            InlineKeyboardButton(text="Farg'ona", callback_data="region_fergana")
        ],
        [
            InlineKeyboardButton(text="Namangan", callback_data="region_namangan"),
            InlineKeyboardButton(text="Sirdaryo", callback_data="region_sirdaryo")
        ],
        [
            InlineKeyboardButton(text="Jizzax", callback_data="region_jizzax"),
            InlineKeyboardButton(text="Samarqand", callback_data="region_samarkand")
        ],
        [
            InlineKeyboardButton(text="Buxoro", callback_data="region_bukhara"),
            InlineKeyboardButton(text="Navoiy", callback_data="region_navoi")
        ],
        [
            InlineKeyboardButton(text="Qashqadaryo", callback_data="region_kashkadarya"),
            InlineKeyboardButton(text="Surxondaryo", callback_data="region_surkhandarya")
        ],
        [
            InlineKeyboardButton(text="Xorazm", callback_data="region_khorezm"),
            InlineKeyboardButton(text="Qoraqalpog'iston", callback_data="region_karakalpakstan")
        ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def get_ccs_export_types_keyboard(lang: str = "uz") -> InlineKeyboardMarkup:
    """Call Center Supervisor export types keyboard with language support"""
    if lang == "uz":
        keyboard = [
            [
                InlineKeyboardButton(text="üìã Operatorlar ochgan arizalar", callback_data="ccs_export_operator_orders"),
                InlineKeyboardButton(text="üë• Call Center operatorlari", callback_data="ccs_export_operators"),
            ],
            [
                InlineKeyboardButton(text="üìä Statistika", callback_data="ccs_export_statistics"),
            ],
            [InlineKeyboardButton(text="üö´ Yopish", callback_data="ccs_export_end")],
        ]
    else:
        keyboard = [
            [
                InlineKeyboardButton(text="üìã –ó–∞—è–≤–∫–∏ –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤", callback_data="ccs_export_operator_orders"),
                InlineKeyboardButton(text="üë• –û–ø–µ—Ä–∞—Ç–æ—Ä—ã Call Center", callback_data="ccs_export_operators"),
            ],
            [
                InlineKeyboardButton(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="ccs_export_statistics"),
            ],
            [InlineKeyboardButton(text="üö´ –ó–∞–∫—Ä—ã—Ç—å", callback_data="ccs_export_end")],
        ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def get_ccs_export_formats_keyboard(lang: str = "uz") -> InlineKeyboardMarkup:
    """Call Center Supervisor export formats keyboard with language support"""
    if lang == "uz":
        keyboard = [
            [InlineKeyboardButton(text="CSV", callback_data="ccs_format_csv")],
            [InlineKeyboardButton(text="Excel", callback_data="ccs_format_xlsx")],
            [InlineKeyboardButton(text="Word", callback_data="ccs_format_docx")],
            [InlineKeyboardButton(text="PDF", callback_data="ccs_format_pdf")],
            [InlineKeyboardButton(text="‚óÄÔ∏è Orqaga", callback_data="ccs_export_back_types")],
        ]
    else:
        keyboard = [
            [InlineKeyboardButton(text="CSV", callback_data="ccs_format_csv")],
            [InlineKeyboardButton(text="Excel", callback_data="ccs_format_xlsx")],
            [InlineKeyboardButton(text="Word", callback_data="ccs_format_docx")],
            [InlineKeyboardButton(text="PDF", callback_data="ccs_format_pdf")],
            [InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="ccs_export_back_types")],
        ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)